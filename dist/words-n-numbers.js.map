{"version":3,"sources":["webpack://wnn/./index.js"],"names":["words","defaultOptions","regex","toLowercase","exports","extract","string","options","toLowerCase","RegExp","wordsNumbersEmojis","match","numbers","emojis","wordsNumbers","wordsEmojis","numbersEmojis","tags","usernames","email"],"mappings":"qCACA,MAAMA,EAAQ,cAoBRC,EAAiB,CACrBC,MAAOF,EACPG,aAAa,GAGfC,EAAQC,QAAU,SAAUC,EAAQC,IAQN,KAN5BA,EAAU,IACLN,KACAM,IAIOJ,cACVG,EAASA,EAAOE,eAIlB,MAAMN,EAAQ,IAAIO,OAAOF,EAAQL,MAAO,OAGxC,IAAIQ,EAAqB,GAEzB,OADAA,EAAqBJ,EAAOK,MAAMT,GAC3BQ,GAGTN,EAAQJ,MAAQA,EAChBI,EAAQQ,QA5CQ,eA6ChBR,EAAQS,OA1CO,2BA2CfT,EAAQU,aAxCa,2BAyCrBV,EAAQW,YAxCY,uCAyCpBX,EAAQY,cAxCc,wCAyCtBZ,EAAQM,mBAxCmB,oDAyC3BN,EAAQa,KAtCK,kCAuCbb,EAAQc,UAtCU,kCAuClBd,EAAQe,MAtCM,8D","file":"words-n-numbers.js","sourcesContent":["// Default. Only words. All languages\nconst words = '\\\\p{Alpha}+'\n\n// Only numbers, needs some work for real life numbers\nconst numbers = '\\\\p{Number}+'\n\n// Only emojis\nconst emojis = '\\\\p{Emoji_Presentation}+'\n\n// Words and numbers, Words and Emojis, Numbers and Emojis. Words and Numbers and Emojis. All lanugages.\nconst wordsNumbers = '\\\\p{Alpha}+|\\\\p{Number}+'\nconst wordsEmojis = '\\\\p{Alpha}+|\\\\p{Emoji_Presentation}+'\nconst numbersEmojis = '\\\\p{Number}+|\\\\p{Emoji_Presentation}+'\nconst wordsNumbersEmojis = '\\\\p{Alpha}+|\\\\p{Number}+|\\\\p{Emoji_Presentation}+'\n\n// #tags, @usernames or email.addresses@example.com\nconst tags = '\\\\B[#][\\\\p{Alpha}|\\\\p{Number}]+'\nconst usernames = '\\\\B[@][\\\\p{Alpha}|\\\\p{Number}]+'\nconst email = '[0-9a-zA-Z!#$%&\\'*+-/=?^_`{|}~.]+@[0-9a-zA-Z-.]+[a-zA-Z0-9]'\n\n// Default options object\nconst defaultOptions = {\n  regex: words,\n  toLowercase: false\n}\n\nexports.extract = function (string, options) {\n  // Populate regex and options objects\n  options = {\n    ...defaultOptions,\n    ...options\n  }\n\n  // string to lowercase ?\n  if (options.toLowercase === true) {\n    string = string.toLowerCase()\n  }\n\n  // regex constructor\n  const regex = new RegExp(options.regex, 'giu')\n\n  // match words (and numbers and emojis)\n  let wordsNumbersEmojis = []\n  wordsNumbersEmojis = string.match(regex)\n  return wordsNumbersEmojis\n}\n\nexports.words = words\nexports.numbers = numbers\nexports.emojis = emojis\nexports.wordsNumbers = wordsNumbers\nexports.wordsEmojis = wordsEmojis\nexports.numbersEmojis = numbersEmojis\nexports.wordsNumbersEmojis = wordsNumbersEmojis\nexports.tags = tags\nexports.usernames = usernames\nexports.email = email\n"],"sourceRoot":""}